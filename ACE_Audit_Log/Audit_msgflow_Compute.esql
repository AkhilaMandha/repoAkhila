

CREATE COMPUTE MODULE Audit_msgflow_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
                 



		
 DECLARE A INTEGER;
 DECLARE B INTEGER;
 SET A = InputRoot.JSON.Data.A;
 SET B= InputRoot.JSON.Data.B;

 SET OutputRoot.JSON.Data.result=A+B;
 
 SET OutputRoot.HTTPInputHeader=InputRoot.HTTPInputHeader;

   
SET OutputLocalEnvironment = InputLocalEnvironment;
--SET OutputLocalEnvironment='http://localhost:7800/char';
SET OutputLocalEnvironment.Destination.HTTP.RequestURL='http://localhost:7800/char';
   SET OutputRoot=InputRoot;
--SET OutputRoot.HTTPRequestHeader=InputRoot.HTTPRequestHeader;


PROPAGATE TO TERMINAL 'out' ;
  PROPAGATE TO TERMINAL 'out1' ;
RETURN TRUE;

  

  END;
END MODULE;







--PROPAGATE TO terminal 'Out1';






















        -- Declare variables and extract dynamic data
--        DECLARE v_timestamp TIMESTAMP CURRENT_TIMESTAMP;
--        DECLARE v_apiname CHARACTER CAST(InputRoot.XMLNSC.Request.APIName AS CHARACTER);
--        DECLARE v_logtype CHARACTER CAST(InputRoot.XMLNSC.Request.LogType AS CHARACTER);
--        DECLARE v_broker CHARACTER CAST(InputRoot.XMLNSC.Request.Broker AS CHARACTER);
--        DECLARE v_egroup CHARACTER CAST(InputRoot.XMLNSC.Request.EGroup AS CHARACTER);
--        DECLARE v_esburl CHARACTER CAST(InputRoot.XMLNSC.Request.ESBURL AS CHARACTER);
--        DECLARE v_backendurl CHARACTER CAST(InputRoot.XMLNSC.Request.BackendURL AS CHARACTER);
--        DECLARE v_messageflow CHARACTER CAST(InputRoot.XMLNSC.Request.MessageFlow AS CHARACTER);
--        DECLARE v_statuscode INTEGER CAST(InputRoot.XMLNSC.Request.StatusCode AS INTEGER);
--        DECLARE v_headers CHARACTER CAST(InputRoot.XMLNSC.Request.Headers AS CHARACTER);
--        DECLARE v_errorresponse CHARACTER CAST(InputRoot.XMLNSC.Request.ErrorResponse AS CHARACTER);
--        DECLARE v_exception CHARACTER CAST(InputRoot.XMLNSC.Request.Exception AS CHARACTER);




--
----DECLARE x CHARACTER;
----
---- SET OutputRoot.XMLNSC.x = InputRoot.XMLNSC.x;
----	
----	RETURN TRUE;
----	END;
----END MODULE;
--                
----        DECLARE v_timestamp TIMESTAMP CURRENT_TIMESTAMP;  -- Get the current timestamp
----        DECLARE v_apiname CHARACTER CAST(InputRoot.XMLNSC.Request.APIName AS CHARACTER);
----        DECLARE v_logtype CHARACTER CAST(InputRoot.XMLNSC.Request.LogType AS CHARACTER);
----        DECLARE v_broker CHARACTER CAST(InputRoot.XMLNSC.Request.Broker AS CHARACTER);
----        DECLARE v_egroup CHARACTER CAST(InputRoot.XMLNSC.Request.EGroup AS CHARACTER);
----        DECLARE v_esburl CHARACTER CAST(InputRoot.XMLNSC.Request.ESBURL AS CHARACTER);
----        DECLARE v_backendurl CHARACTER CAST(InputRoot.XMLNSC.Request.BackendURL AS CHARACTER);
----        DECLARE v_messageflow CHARACTER CAST(InputRoot.XMLNSC.Request.MessageFlow AS CHARACTER);
----        DECLARE v_statuscode INTEGER CAST(InputRoot.XMLNSC.Request.StatusCode AS INTEGER);
----        DECLARE v_headers CHARACTER CAST(InputRoot.XMLNSC.Request.Headers AS CHARACTER);
----        
----        -- Prepare the output message structure
------        SET OutputRoot.XMLNSC.Response.Result.Timestamp = v_timestamp;
------        SET OutputRoot.XMLNSC.Response.Result.APIName = v_apiname;
------        SET OutputRoot.XMLNSC.Response.Result.LogType = v_logtype;
------        SET OutputRoot.XMLNSC.Response.Result.Broker = v_broker;
------        SET OutputRoot.XMLNSC.Response.Result.EGroup = v_egroup;
------        SET OutputRoot.XMLNSC.Response.Result.ESBURL = v_esburl;
------        SET OutputRoot.XMLNSC.Response.Result.BackendURL = v_backendurl;
------        SET OutputRoot.XMLNSC.Response.Result.MessageFlow = v_messageflow;
------        SET OutputRoot.XMLNSC.Response.Result.StatusCode = v_statuscode;
------        SET OutputRoot.XMLNSC.Response.Result.Headers = v_headers;
----
----        RETURN TRUE;  -- Indicate successful completion of the function
----    END;
----END MODULE;




--
-- PASSTHRU('INSERT INTO audit (
--    timestamp, 
--    apiname, 
--    logtype, 
--    broker, 
--    egroup, 
--    esburl, 
--    backendurl, 
--    messageflow, 
--    statuscode, 
--    headers, 
--    errorresponse, 
--    exception)
-- TO Database.Mysql VALUES (
--    v_timestamp, 
--    v_apiname, 
--    v_logtype, 
--    v_broker, 
--    v_egroup, 
--    v_esburl, 
--    v_backendurl, 
--    v_messageflow, 
--    v_statuscode, 
--    v_headers, 
--    v_errorresponse, 
--    v_exception
--)');
--		
--		RETURN TRUE;
--		
--	END;
--END MODULE;
        -- Insert the data into the audit table
      
      -- PASSTHRU(v_sql TO Database.Mysql VALUES (
--            v_timestamp, 
--            v_apiname, 
--            v_logtype, 
--            v_broker, 
--            v_egroup, 
--            v_esburl, 
--            v_backendurl, 
--            v_messageflow, 
--            v_statuscode, 
--            v_headers, 
--            v_errorresponse, 
--            v_exception
----        ));
--
--        RETURN TRUE;
--    END;
--END MODULE;

-- Insert the data into the audit table
----DECLARE v_timestamp TIMESTAMP CURRENT_TIMESTAMP;  
----DECLARE v_apiname CHARACTER 'YourAPIName';  
----DECLARE v_logtype CHARACTER 'YourLogType';  
----DECLARE v_broker CHARACTER 'YourBroker';
----DECLARE v_egroup CHARACTER 'YourEgroup';  
----DECLARE v_esburl CHARACTER 'YourESBURL';
----DECLARE v_backendurl CHARACTER 'YourBackendURL';  
----DECLARE v_messageflow CHARACTER 'YourMessageFlow'; 
----DECLARE v_statuscode INTEGER 200;  
----DECLARE v_headers CHARACTER 'YourHeaders';  
----DECLARE v_errorresponse CHARACTER 'YourErrorResponse';  
----DECLARE v_exception CHARACTER 'YourException';     
--     		
--DECLARE v_timestamp TIMESTAMP CURRENT_TIMESTAMP;  
--DECLARE v_apiname CHARACTER ;  
--DECLARE v_logtype CHARACTER ;  
--DECLARE v_broker CHARACTER ;
--DECLARE v_egroup CHARACTER;  
--DECLARE v_esburl CHARACTER ;
--DECLARE v_backendurl CHARACTER ;  
--DECLARE v_messageflow CHARACTER ; 
--DECLARE v_statuscode INTEGER 200;  
--DECLARE v_headers CHARACTER ;  
--DECLARE v_errorresponse CHARACTER ;  
--DECLARE v_exception CHARACTER ; 
----
----  PASSTHRU('INSERT INTO audit (
----    timestamp, 
----    apiname, 
----    logtype, 
----    broker, 
----    egroup, 
----    esburl, 
----    backendurl, 
----    messageflow, 
----    statuscode, 
----    headers, 
----    errorresponse, 
----    exception)
---- TO Database.Mysql VALUES (
----    v_timestamp, 
----    v_apiname, 
----    v_logtype, 
----    v_broker, 
----    v_egroup, 
----    v_esburl, 
----    v_backendurl, 
----    v_messageflow, 
----    v_statuscode, 
----    v_headers, 
----    v_errorresponse, 
----    v_exception
----)');
----		
----		RETURN TRUE;
----		
----	END;
----END MODULE;
----     
--       
        
	

		
